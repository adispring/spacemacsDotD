* Shortcut
** C-m: Return，can replay return key.

* Hooks

Most major modes run one or more mode hooks as the last step of initialization. 
Mode hooks are a convenient way to customize the behavior of individual modes; 
they are always normal. For example, here's how to set up a hook to turn on
Auto Fill mode in Text mode and other modes based on Text mode:

#+BEGIN_SRC emacs-lisp
  (add-hook 'text-mode-hook 'auto-fill-mode)
#+END_SRC

* How to use emacs helps:

You should ask Emacs this question: C-h i, choose the Elisp manual (m Elisp), 
and search the index for "defvar" (i defvar). That takes you to node Defining 
Variables.

Emacs tells you that defvar allows attaching a doc string, and that if 
the variable already has a value then it does nothing.

It also tells you about the use of defvar with no value to be assigned: 
(defvar foo). It tells you that that declares the variable to be dynamically scoped.

setq has none of those properties.

defvar and setq are similar, but not quite the same, in Emacs Lisp and Common Lisp.
* Ivy 批量修改
https://zhuanlan.zhihu.com/p/22687261

* use-package
** :init & :config

In =:config= should be
- Anything that requires the package to be already loaded.
- Anything that takes a long time to run, which would ruin startup performance.

The =:init= block should contain setup for the entry points to the package. This
includes key bindings, if the package should be loaded manually by the user, or
hooks, if the package should be loaded upon some event. It is not unusual to
have both!

标记一个位置或者书签，可以跳回标记的标签：https://www.gnu.org/software/emacs/manual/html_node/emacs/Registers.html#Registers

web-mode 前缀：C-c C-e

swiper:
C-o (hydra-ivy/body)
Invokes the hydra menu with short key bindings.

搜索并插入搜索到的行：
- C-c j: 要搜索的内容
  M-o(调出候选动作)
  - i 直接在当前位置插入搜到的行
    w 复制当前行

- C-c j: 要搜索的内容
  C-o(调出候选动作 -- Hydra)

查找看某个 layer ：SPC h l
