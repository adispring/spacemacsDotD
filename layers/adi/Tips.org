* Shortcut
** C-m: Return，can replay return key.

* Hooks

Most major modes run one or more mode hooks as the last step of initialization. 
Mode hooks are a convenient way to customize the behavior of individual modes; 
they are always normal. For example, here's how to set up a hook to turn on
Auto Fill mode in Text mode and other modes based on Text mode:

#+BEGIN_SRC emacs-lisp
  (add-hook 'text-mode-hook 'auto-fill-mode)
#+END_SRC

* How to use emacs helps:

You should ask Emacs this question: C-h i, choose the Elisp manual (m Elisp), 
and search the index for "defvar" (i defvar). That takes you to node Defining 
Variables.

Emacs tells you that defvar allows attaching a doc string, and that if 
the variable already has a value then it does nothing.

It also tells you about the use of defvar with no value to be assigned: 
(defvar foo). It tells you that that declares the variable to be dynamically scoped.

setq has none of those properties.

defvar and setq are similar, but not quite the same, in Emacs Lisp and Common Lisp.
* Ivy 批量修改
https://zhuanlan.zhihu.com/p/22687261

* use-package
** :init & :config

In =:config= should be
- Anything that requires the package to be already loaded.
- Anything that takes a long time to run, which would ruin startup performance.

The =:init= block should contain setup for the entry points to the package. This
includes key bindings, if the package should be loaded manually by the user, or
hooks, if the package should be loaded upon some event. It is not unusual to
have both!


标记一个位置或者书签，可以跳回标记的标签：https://www.gnu.org/software/emacs/manual/html_node/emacs/Registers.html#Registers

* 标记：C-x r M bookmark RET
  跳转: C-x r b bookmark RET


web-mode 前缀：C-c C-e

swiper:
C-o (hydra-ivy/body)
Invokes the hydra menu with short key bindings.

搜索并插入搜索到的行：
- C-c j: 要搜索的内容
  M-o(调出候选动作)
  - i 直接在当前位置插入搜到的行
    w 复制当前行

- C-c j: 要搜索的内容
  C-o(调出候选动作 -- Hydra)

查找看某个 layer ：SPC h l

查看 flycheck 配置：
- flycheck-verify-setup (M-m e v) 查看当前启动的 checkers
  一般 js 语法检查使用 javascript-eslint ，如果 javascript-eslint 没有启动，可能有两个原因：
  1. 没有安装 eslint，
     解决方法：npm install eslint -D
  2. eslint 配置文件有问题或者没有 eslint 配置文件，
     解决方法：在项目根目录下（若用了 lerna，则在子项目根目录）生成一份 .eslintrc.js
     运行 npm eslint --print-config index.js 看 .eslintrc.js 是否报错，根据报错修复 .eslintrc.js 的问题，
     直至完全没有问题。

prettier 会使用项目中的 .prettierrc 来格式化代码

打开链接：C-c u

* 在某个文件夹下查询字符串:
** C-u C-c k: counsel-ag
   spacemacs/search-ag

   不退出查看当前项

ivy-mode

*** Key bindings for multiple selections and actions, keep minibuffer open
:PROPERTIES:
:CUSTOM_ID: key-bindings-for-multiple-selections-and-actions-keep-minibuffer-open
:END:

For repeatedly applying multiple actions or acting on multiple
candidates, Ivy does not close the minibuffer between commands. It
keeps the minibuffer open for applying subsequent actions.

Adding an extra meta key to the normal key chord invokes the special
version of the regular commands that enables applying multiple
actions.

- ~C-M-m~ (=ivy-call=) ::
     Is the non-exiting version of ~C-m~ (=ivy-done=).

     Instead of closing the minibuffer, ~C-M-m~ allows selecting
     another candidate or another action. For example, ~C-M-m~ on
     functions list invokes =describe-function=. When combined with
     ~C-n~, function descriptions can be invoked quickly in
     succession.

- ~C-M-o~ (=ivy-dispatching-call=) ::
     Is the non-exiting version of ~M-o~ (=ivy-dispatching-done=).

     For example, during the =counsel-rhythmbox= completion, press
     ~C-M-o e~ to en-queue the selected candidate, followed by ~C-n
     C-m~ to play the next candidate - the current action reverts to
     the default one after ~C-M-o~.

- ~C-M-n~ (=ivy-next-line-and-call=) ::
     Combines ~C-n~ and ~C-M-m~. Moves to next line and applies an action.

     Comes in handy when opening multiple files from
     =counsel-find-file=, =counsel-git-grep=, =counsel-ag=, =counsel-rg=, or
     =counsel-locate= lists. Just hold ~C-M-n~ for rapid-fire default
     action on each successive element of the list.

- ~C-M-p~ (=ivy-previous-line-and-call=) ::
     Combines ~C-p~ and ~C-M-m~.

     Similar to the above except it moves through the list in the
     other direction.

- =ivy-resume= ::
     Recalls the state of the completion session just before its last
     exit.

     Useful after an accidental ~C-m~ (=ivy-done=).
     Use it with =universal-argument= to resume any previous session.
   

* 在某个文件夹下查询文件名:
** C-c n: counsel-fzf 

Emacs Manual Shortcut: C-h r

Dired Mode 中创建文件夹: +
Dired Mode 中，打开 finder: M-m f o

10.5 Help Mode Commands
=======================

‘C-c C-f’
‘r’
     Go forward to the next help topic (‘help-go-forward’).
‘C-c C-b’
‘l’
     Go back to the previous help topic (‘help-go-back’).
=======


